module DataType {

    //enum
    enum Color {
        RED,
        GREEN,
        BLUE
        };

    struct TypeTestEnum {
        long id;
        Color value;                        //enum
    };
    #pragma keylist TypeTestEnum id

    struct TypeTestSeq {
        long id;
        sequence<long> value;               //sequence of long
    };
    #pragma keylist TypeTestSeq id

    struct TypeTestBoundedSeq {
        long id;
        sequence<long, 3> value;            //bounded sequence of long
    };
    #pragma keylist TypeTestBoundedSeq id

    struct TypeTestArrayOfSeq {
        long id;
        sequence<long> value[3];            //Array of sequence of long
    };
    #pragma keylist TypeTestArrayOfSeq id

    struct Msg {         
        long key;
        string message;        
    };

    struct TypeTestNestedStruct {
        long id;      
        Msg value;                    //nested struct     
    };
    #pragma keylist TypeTestNestedStruct id

    struct TypeTestArrayOfNestedStruct {
        long id;       
        Msg value[2];                 //array of nested structs    
    };
    #pragma keylist TypeTestArrayOfNestedStruct id

};