/**
 * This file is auto-generated by idlpp
 * 
 * Source: MotorMessage.idl
 * Generated on: 2020-02-04T15:39:47+0800
 * OpenSplice 6.10.3
 */
#ifndef _MotorMessageDCPS_H_
#define _MotorMessageDCPS_H_

#include "sacpp_mapping.h"
#include "dds_dcps.h"
#include "MotorMessage.h"


class MotorMessageTypeSupportInterface;

typedef MotorMessageTypeSupportInterface * MotorMessageTypeSupportInterface_ptr;
typedef DDS_DCPSInterface_var < MotorMessageTypeSupportInterface> MotorMessageTypeSupportInterface_var;
typedef DDS_DCPSInterface_out < MotorMessageTypeSupportInterface> MotorMessageTypeSupportInterface_out;


class MotorMessageDataWriter;

typedef MotorMessageDataWriter * MotorMessageDataWriter_ptr;
typedef DDS_DCPSInterface_var < MotorMessageDataWriter> MotorMessageDataWriter_var;
typedef DDS_DCPSInterface_out < MotorMessageDataWriter> MotorMessageDataWriter_out;


class MotorMessageDataReader;

typedef MotorMessageDataReader * MotorMessageDataReader_ptr;
typedef DDS_DCPSInterface_var < MotorMessageDataReader> MotorMessageDataReader_var;
typedef DDS_DCPSInterface_out < MotorMessageDataReader> MotorMessageDataReader_out;


class MotorMessageDataReaderView;

typedef MotorMessageDataReaderView * MotorMessageDataReaderView_ptr;
typedef DDS_DCPSInterface_var < MotorMessageDataReaderView> MotorMessageDataReaderView_var;
typedef DDS_DCPSInterface_out < MotorMessageDataReaderView> MotorMessageDataReaderView_out;

struct MotorMessageSeq_uniq_ {};
typedef DDS_DCPSUVLSeq < MotorMessage, struct MotorMessageSeq_uniq_> MotorMessageSeq;
typedef DDS_DCPSSequence_var < MotorMessageSeq> MotorMessageSeq_var;
typedef DDS_DCPSSequence_out < MotorMessageSeq> MotorMessageSeq_out;

class  MotorMessageTypeSupportInterface :
    virtual public DDS::TypeSupport
{ 
public:
    typedef MotorMessageTypeSupportInterface_ptr _ptr_type;
    typedef MotorMessageTypeSupportInterface_var _var_type;

    static MotorMessageTypeSupportInterface_ptr _duplicate (MotorMessageTypeSupportInterface_ptr obj);
    DDS::Boolean _local_is_a (const char * id);

    static MotorMessageTypeSupportInterface_ptr _narrow (DDS::Object_ptr obj);
    static MotorMessageTypeSupportInterface_ptr _unchecked_narrow (DDS::Object_ptr obj);
    static MotorMessageTypeSupportInterface_ptr _nil () { return 0; }
    static const char * _local_id;
    MotorMessageTypeSupportInterface_ptr _this () { return this; }


protected:
    MotorMessageTypeSupportInterface () {};
    ~MotorMessageTypeSupportInterface () {};
private:
    MotorMessageTypeSupportInterface (const MotorMessageTypeSupportInterface &);
    MotorMessageTypeSupportInterface & operator = (const MotorMessageTypeSupportInterface &);
};

class  MotorMessageDataWriter :
    virtual public DDS::DataWriter
{ 
public:
    typedef MotorMessageDataWriter_ptr _ptr_type;
    typedef MotorMessageDataWriter_var _var_type;

    static MotorMessageDataWriter_ptr _duplicate (MotorMessageDataWriter_ptr obj);
    DDS::Boolean _local_is_a (const char * id);

    static MotorMessageDataWriter_ptr _narrow (DDS::Object_ptr obj);
    static MotorMessageDataWriter_ptr _unchecked_narrow (DDS::Object_ptr obj);
    static MotorMessageDataWriter_ptr _nil () { return 0; }
    static const char * _local_id;
    MotorMessageDataWriter_ptr _this () { return this; }

    virtual DDS::LongLong register_instance (const MotorMessage& instance_data) = 0;
    virtual DDS::LongLong register_instance_w_timestamp (const MotorMessage& instance_data, const DDS::Time_t& source_timestamp) = 0;
    virtual DDS::Long unregister_instance (const MotorMessage& instance_data, DDS::LongLong handle) = 0;
    virtual DDS::Long unregister_instance_w_timestamp (const MotorMessage& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
    virtual DDS::Long write (const MotorMessage& instance_data, DDS::LongLong handle) = 0;
    virtual DDS::Long write_w_timestamp (const MotorMessage& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
    virtual DDS::Long dispose (const MotorMessage& instance_data, DDS::LongLong handle) = 0;
    virtual DDS::Long dispose_w_timestamp (const MotorMessage& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
    virtual DDS::Long writedispose (const MotorMessage& instance_data, DDS::LongLong handle) = 0;
    virtual DDS::Long writedispose_w_timestamp (const MotorMessage& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
    virtual DDS::Long get_key_value (MotorMessage& key_holder, DDS::LongLong handle) = 0;
    virtual DDS::LongLong lookup_instance (const MotorMessage& instance_data) = 0;

protected:
    MotorMessageDataWriter () {};
    ~MotorMessageDataWriter () {};
private:
    MotorMessageDataWriter (const MotorMessageDataWriter &);
    MotorMessageDataWriter & operator = (const MotorMessageDataWriter &);
};

class  MotorMessageDataReader :
    virtual public DDS::DataReader
{ 
public:
    typedef MotorMessageDataReader_ptr _ptr_type;
    typedef MotorMessageDataReader_var _var_type;

    static MotorMessageDataReader_ptr _duplicate (MotorMessageDataReader_ptr obj);
    DDS::Boolean _local_is_a (const char * id);

    static MotorMessageDataReader_ptr _narrow (DDS::Object_ptr obj);
    static MotorMessageDataReader_ptr _unchecked_narrow (DDS::Object_ptr obj);
    static MotorMessageDataReader_ptr _nil () { return 0; }
    static const char * _local_id;
    MotorMessageDataReader_ptr _this () { return this; }

    virtual DDS::Long read (MotorMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
    virtual DDS::Long take (MotorMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
    virtual DDS::Long read_w_condition (MotorMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
    virtual DDS::Long take_w_condition (MotorMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
    virtual DDS::Long read_next_sample (MotorMessage& received_data, DDS::SampleInfo& sample_info) = 0;
    virtual DDS::Long take_next_sample (MotorMessage& received_data, DDS::SampleInfo& sample_info) = 0;
    virtual DDS::Long read_instance (MotorMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
    virtual DDS::Long take_instance (MotorMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
    virtual DDS::Long read_next_instance (MotorMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
    virtual DDS::Long take_next_instance (MotorMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
    virtual DDS::Long read_next_instance_w_condition (MotorMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
    virtual DDS::Long take_next_instance_w_condition (MotorMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
    virtual DDS::Long return_loan (MotorMessageSeq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
    virtual DDS::Long get_key_value (MotorMessage& key_holder, DDS::LongLong handle) = 0;
    virtual DDS::LongLong lookup_instance (const MotorMessage& instance) = 0;

protected:
    MotorMessageDataReader () {};
    ~MotorMessageDataReader () {};
private:
    MotorMessageDataReader (const MotorMessageDataReader &);
    MotorMessageDataReader & operator = (const MotorMessageDataReader &);
};

class  MotorMessageDataReaderView :
    virtual public DDS::DataReaderView
{ 
public:
    typedef MotorMessageDataReaderView_ptr _ptr_type;
    typedef MotorMessageDataReaderView_var _var_type;

    static MotorMessageDataReaderView_ptr _duplicate (MotorMessageDataReaderView_ptr obj);
    DDS::Boolean _local_is_a (const char * id);

    static MotorMessageDataReaderView_ptr _narrow (DDS::Object_ptr obj);
    static MotorMessageDataReaderView_ptr _unchecked_narrow (DDS::Object_ptr obj);
    static MotorMessageDataReaderView_ptr _nil () { return 0; }
    static const char * _local_id;
    MotorMessageDataReaderView_ptr _this () { return this; }

    virtual DDS::Long read (MotorMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
    virtual DDS::Long take (MotorMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
    virtual DDS::Long read_w_condition (MotorMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
    virtual DDS::Long take_w_condition (MotorMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
    virtual DDS::Long read_next_sample (MotorMessage& received_data, DDS::SampleInfo& sample_info) = 0;
    virtual DDS::Long take_next_sample (MotorMessage& received_data, DDS::SampleInfo& sample_info) = 0;
    virtual DDS::Long read_instance (MotorMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
    virtual DDS::Long take_instance (MotorMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
    virtual DDS::Long read_next_instance (MotorMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
    virtual DDS::Long take_next_instance (MotorMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
    virtual DDS::Long read_next_instance_w_condition (MotorMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
    virtual DDS::Long take_next_instance_w_condition (MotorMessageSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
    virtual DDS::Long return_loan (MotorMessageSeq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
    virtual DDS::Long get_key_value (MotorMessage& key_holder, DDS::LongLong handle) = 0;
    virtual DDS::LongLong lookup_instance (const MotorMessage& instance) = 0;

protected:
    MotorMessageDataReaderView () {};
    ~MotorMessageDataReaderView () {};
private:
    MotorMessageDataReaderView (const MotorMessageDataReaderView &);
    MotorMessageDataReaderView & operator = (const MotorMessageDataReaderView &);
};
#endif
