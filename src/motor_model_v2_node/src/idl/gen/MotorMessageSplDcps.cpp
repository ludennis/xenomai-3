/**
 * This file is auto-generated by idlpp
 * 
 * Source: MotorMessage.idl
 * Generated on: 2020-02-04T15:39:47+0800
 * OpenSplice 6.10.3
 */
#include "MotorMessageSplDcps.h"
#include "ccpp_MotorMessage.h"

#include <v_copyIn.h>
#include <v_topic.h>
#include <os_stdlib.h>
#include <string.h>
#include <os_report.h>

v_copyin_result
__MotorMessage__copyIn(
    c_base base,
    const struct MotorMessage *from,
    struct _MotorMessage *to)
{
    v_copyin_result result = V_COPYIN_RESULT_OK;
    (void) base;

    to->id = (c_long)from->id;
#ifdef OSPL_BOUNDS_CHECK
    if(from->content){
        to->content = c_stringNew_s(base, from->content);
        if(to->content == NULL) {
            result = V_COPYIN_RESULT_OUT_OF_MEMORY;
        }
    } else {
        OS_REPORT (OS_ERROR, "copyIn", 0,"Member 'MotorMessage.content' of type 'c_string' is NULL.");
        result = V_COPYIN_RESULT_INVALID;
    }
#else
    to->content = c_stringNew_s(base, from->content);
    if(to->content == NULL) {
        result = V_COPYIN_RESULT_OUT_OF_MEMORY;
    }
#endif
    return result;
}

void
__MotorMessage__copyOut(
    const void *_from,
    void *_to)
{
    const struct _MotorMessage *from = (const struct _MotorMessage *)_from;
    struct MotorMessage *to = (struct MotorMessage *)_to;
    to->id = (::DDS::Long)from->id;
    to->content = DDS::string_dup(from->content ? from->content : "");
}

